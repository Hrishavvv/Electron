let isRoot=!1,users=JSON.parse(localStorage.getItem("users"))||{user:"12345"},currentUser="user",currentDir="~",authenticated=!1,promptElement=document.getElementById("prompt"),outputElement=document.getElementById("output"),inputElement=document.getElementById("input");const rootDirectories={"/":["bin","boot","dev","etc","home","lib","lib64","media","mnt","opt","proc","root","run","sbin","srv","sys","tmp","usr","var"]},homeDirectories=["Documents","Downloads","Music","Pictures","Videos"];function initializeFilesystem(){if(localStorage.getItem("filesystem")){const e=JSON.parse(localStorage.getItem("filesystem"));for(let t in rootDirectories)e[t]||(e[t]=rootDirectories[t]);localStorage.setItem("filesystem",JSON.stringify(e))}else{const e={"/":rootDirectories["/"],"/home":{}};for(let t in users)"root"!==t&&(e[`/home/${t}`]=homeDirectories,homeDirectories.forEach((r=>{e[`/home/${t}/${r}`]=[]})));localStorage.setItem("filesystem",JSON.stringify(e))}}function getCurrentPath(){return"~"===currentDir?`/home/${currentUser}`:currentDir.startsWith("~")?`/home/${currentUser}${currentDir.slice(1)}`:currentDir}function resolvePath(e){return e.startsWith("/")?e:e.startsWith("~")?`/home/${currentUser}${e.slice(1)}`:`${getCurrentPath()}/${e}`}function updatePrompt(){isRoot?(promptElement.textContent=`root@electron:${currentDir}# `,promptElement.style.color="red"):(promptElement.textContent=`${currentUser}@electron:${currentDir}$ `,promptElement.style.color="cyan")}function formatOutput(e){return e.map((e=>e.includes(".")?`<span style="color:pink;">${e}</span>`:`<span style="color:lightblue;">${e}</span>`)).join(" ")}function isProtectedDir(e){return"/"!==e&&rootDirectories["/"].some((t=>e.startsWith(`/${t}`)))}async function executeCommand(e){if(!e.trim())return"";let t="",r=e.split(" "),o=r[0],s=JSON.parse(localStorage.getItem("filesystem")),n=getCurrentPath();switch(o){case"sudo":if("su"===r[1]){"12345"===prompt("Enter password for sudo: ")?(isRoot=!0,authenticated=!0,currentUser="root",currentDir="/"):t="Authentication failure. Hint: 12345"}else if("apt"===r[1]&&"update"===r[2]||"update"===r[1]){if(!authenticated){if("12345"!==prompt("Enter password for sudo: ")){t="Authentication failure. Hint: 12345";break}authenticated=!0}t="Updating package lists...\n[=========>.........] 50%\nUpdating package lists... Done."}else if("apt"===r[1]&&"upgrade"===r[2]||"upgrade"===r[1]){if(!authenticated){if("12345"!==prompt("Enter password for sudo: ")){t="Authentication failure. Hint: 12345";break}authenticated=!0}if(r.includes("-y"))t="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done.";else{t="y"===prompt("Do you want to continue? [Y/n]").toLowerCase()?"Upgrading packages...\n[====================] 100%\nUpgrading packages... Done.":"Operation cancelled."}}else t=`Command not found: ${e}`;break;case"apt":if("update"===r[1])t="Updating package lists...\n[=========>.........] 50%\nUpdating package lists... Done.";else if("upgrade"===r[1])if(r.includes("-y"))t="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done.";else{t="y"===prompt("Do you want to continue? [Y/n]").toLowerCase()?"Upgrading packages...\n[====================] 100%\nUpgrading packages... Done.":"Operation cancelled."}else t=`Command not found: ${e}`;break;case"ls":let o=r[1]?resolvePath(r[1]):n;t=isRoot&&isProtectedDir(o)?`ls: cannot access '${r[1]}': Permission denied`:s[o]?formatOutput(s[o]):`ls: cannot access '${r[1]}': No such file or directory`;break;case"cd":if(r[1]){let e=resolvePath(r[1]);isRoot&&isProtectedDir(e)?t=`bash: cd: ${r[1]}: Permission denied`:s[e]?currentDir="/"===e?"/":e.replace(`/home/${currentUser}`,"~"):t=`bash: cd: ${r[1]}: No such file or directory`}else currentDir="~";break;case"pwd":t=getCurrentPath();break;case"whoami":t=currentUser;break;case"uname":t="-a"===r[1]?"Electron v1.1.3 beta by Hrishav":"Usage: uname -a";break;case"python":t="--version"===r[1]?"Python 3.8.5":"Usage: python --version";break;case"adduser":if(r[1]){let e=r[1],o=prompt("Set a new password: ");o===prompt("Enter the password again: ")?(users[e]=o,localStorage.setItem("users",JSON.stringify(users)),s[`/home/${e}`]=homeDirectories,homeDirectories.forEach((t=>{s[`/home/${e}/${t}`]=[]})),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Added user ${e}.`):t="Passwords do not match. Try again."}else t="Usage: adduser <username>";break;case"login":if(r[1]){let e=r[1],o=prompt("Password: ");users[e]&&users[e]===o?(currentUser=e,currentDir="~",t=`Logged in as ${e}`):t="Login incorrect"}else t="Usage: login <username>";break;case"exit":isRoot?(isRoot=!1,authenticated=!1,currentUser="user",currentDir="~"):t="No more processes left to exit.";break;case"clear":return outputElement.innerHTML="","";case"ifconfig":t="eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n    inet 192.168.1.100  netmask 255.255.255.0  broadcast 192.168.1.255\n    inet6 fe80::a00:27ff:fe4e:66a1  prefixlen 64  scopeid 0x20<link>\n    ether 08:00:27:4e:66:a1  txqueuelen 1000  (Ethernet)\n    RX packets 215265  bytes 327264500 (312.1 MiB)\n    RX errors 0  dropped 0  overruns 0  frame 0\n    TX packets 155209  bytes 14030524 (13.3 MiB)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n    inet 127.0.0.1  netmask 255.0.0.0\n    inet6 ::1  prefixlen 128  scopeid 0x10<host>\n    loop  txqueuelen 1000  (Local Loopback)\n    RX packets 0  bytes 0 (0.0 B)\n    RX errors 0  dropped 0  overruns 0  frame 0\n    TX packets 0  bytes 0 (0.0 B)\n    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0";break;case"nano":if(r[1]){let e=r[1],o=resolvePath(e),n=s[o]||"";n=prompt("Enter file content: ",n),s[o]=n;let i=o.substring(0,o.lastIndexOf("/"));s[i].includes(e)||s[i].push(e),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Created file ${e}.`}else t="Usage: nano <filename>";break;case"cat":let i=r[1]?resolvePath(r[1]):"";t=isRoot&&isProtectedDir(i)?`cat: ${r[1]}: Permission denied`:s[i]?s[i]:`cat: ${r[1]}: No such file or directory`;break;case"mkdir":if(r[1]){let e=r[1],o=resolvePath(e);s[o]=[];let n=o.substring(0,o.lastIndexOf("/"));s[n].includes(e)||s[n].push(e),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Created directory ${e}.`}else t="Usage: mkdir <directory>";break;case"rmdir":if(r[1]){let e=r[1],o=resolvePath(e);if(isRoot&&isProtectedDir(o))t=`rmdir: failed to remove '${e}': Permission denied`;else if(s[o]&&0===s[o].length){delete s[o];let r=o.substring(0,o.lastIndexOf("/"));s[r]=s[r].filter((t=>t!==e)),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Removed directory ${e}.`}else t=`rmdir: failed to remove '${e}': Directory not empty or does not exist.`}else t="Usage: rmdir <directory>";break;case"rm":if("-rf"===r[1]&&r[2]){let e=resolvePath(r[2]);if(isRoot&&isProtectedDir(e))t=`rm: cannot remove '${r[2]}': Permission denied`;else if(s[e]){!function e(t){Array.isArray(s[t])&&s[t].forEach((r=>e(`${t}/${r}`))),delete s[t]}(e);let o=e.substring(0,e.lastIndexOf("/"));s[o]=s[o].filter((e=>e!==r[2])),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Removed ${r[2]}`}else t=`rm: cannot remove '${r[2]}': No such file or directory`}else if(r[1]){let e=r[1],o=resolvePath(e);if(isRoot&&isProtectedDir(o))t=`rm: cannot remove '${e}': Permission denied`;else if(s[o]){delete s[o];let r=o.substring(0,o.lastIndexOf("/"));s[r]=s[r].filter((t=>t!==e)),localStorage.setItem("filesystem",JSON.stringify(s)),t=`Removed file ${e}.`}else t=`rm: cannot remove '${e}': No such file`}else t="Usage: rm <file>";break;case"trace":if("-m"===r[1])t=await fetchIpInfo();else if("-t"===r[1]&&r[2]){const e=r[2];t=await fetchIpInfo(e)}else t="Usage: trace -m | trace -t <IP address>";break;default:t=`Command not found: ${e}`}return t}async function fetchIpInfo(e=""){const t=await fetch(`https://ipapi.co/${e}/json/`),r=await t.json(),{ip:o,city:s,region:n,country_name:i,timezone:a,org:l,asn:c,latitude:u,longitude:m,utc_offset:d}=r;return`IP: ${o}\nCity: ${s}\nRegion: ${n}\nCountry: ${i}\nTimezone: ${a}\nLocal Time: ${(new Date).toLocaleString("en-US",{timeZone:a})}\nISP: ${l}\nASN: ${c}\nLatitude: ${u}\nLongitude: ${m}`}inputElement.addEventListener("keydown",(async function(e){if("Enter"===e.key){let e=inputElement.value,t=await executeCommand(e);outputElement.innerHTML+=t?`<div><span style="color:${promptElement.style.color};">${promptElement.textContent}</span> ${e}</div><div style="color:lime; text-align:left;">${t}</div>`:`<div><span style="color:${promptElement.style.color};">${promptElement.textContent}</span> ${e}</div>`,inputElement.value="",updatePrompt(),outputElement.scrollTop=outputElement.scrollHeight}})),initializeFilesystem(),updatePrompt();