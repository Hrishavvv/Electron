let c=false;let d=JSON.parse(localStorage.getItem("users"))||{t:"12345"};let p="user";let f="~";let u=false;let a=document.getElementById("prompt");let m=document.getElementById("output");let s=document.getElementById("input");const e={o:["bin","boot","dev","etc","home","lib","lib64","media","mnt","opt","proc","root","run","sbin","srv","sys","tmp","usr","var"]};const g=["Documents","Downloads","Music","Pictures","Videos"];function t(){if(!localStorage.getItem("filesystem")){const a={o:e["o"],i:{}};for(let t in d){if(t!=="root"){a[`/home/${t}`]=g;g.forEach(e=>{a[`/home/${t}/${e}`]=[]})}}localStorage.setItem("filesystem",JSON.stringify(a))}}function $(){if(f==="~"){return`/home/${p}`}else if(f.startsWith("~")){return`/home/${p}${f.slice(1)}`}else{return f}}function o(){if(c){a.textContent=`root@electron:${f}# `;a.style.color="red"}else{a.textContent=`${p}@electron:${f}$ `;a.style.color="cyan"}}function y(e){return e.map(e=>{if(e.includes(".")){return`<span style="color:pink;">${e}</span>`}else{return`<span style="color:lightblue;">${e}</span>`}}).join(" ")}async function r(a){let s="";let o=a.split(" ");let r=o[0];let n=JSON.parse(localStorage.getItem("filesystem"));let i=$();switch(r){case"sudo":if(o[1]==="su"){let e=prompt("Enter password for sudo: ");if(e==="12345"){c=true;u=true;p="root";f="/"}else{s="Authentication failure. Hint: 12345"}}else if(o[1]==="apt"&&o[2]==="update"||o[1]==="update"){if(!u){let e=prompt("Enter password for sudo: ");if(e==="12345"){u=true}else{s="Authentication failure. Hint: 12345";break}}s="Updating package lists...\n[=========>.........] 50%\nUpdating package lists... Done."}else if(o[1]==="apt"&&o[2]==="upgrade"||o[1]==="upgrade"){if(!u){let e=prompt("Enter password for sudo: ");if(e==="12345"){u=true}else{s="Authentication failure. Hint: 12345";break}}if(o.includes("-y")){s="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done."}else{let e=prompt("Do you want to continue? [Y/n]");if(e.toLowerCase()==="y"){s="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done."}else{s="Operation cancelled."}}}else{s=`Command not found: ${a}`}break;case"apt":if(o[1]==="update"){s="Updating package lists...\n[=========>.........] 50%\nUpdating package lists... Done."}else if(o[1]==="upgrade"){if(o.includes("-y")){s="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done."}else{let e=prompt("Do you want to continue? [Y/n]");if(e.toLowerCase()==="y"){s="Upgrading packages...\n[====================] 100%\nUpgrading packages... Done."}else{s="Operation cancelled."}}}else{s=`Command not found: ${a}`}break;case"ls":let e=o[1]?o[1]:i;if(n[e]){s=y(n[e])}else{s=`ls: cannot access '${o[1]}': No such file or directory`}break;case"cd":if(o[1]){let e=o[1]===".."?i.split("/").slice(0,-1).join("/")||"/":i+"/"+o[1];if(n[e]){f=e==="/"?"/":e.replace(`/home/${p}`,"~")}else{s=`bash: cd: ${o[1]}: No such file or directory`}}else{f="~"}break;case"pwd":s=$();break;case"whoami":s=p;break;case"uname":if(o[1]==="-a"){s="Electron v1.1.2 by Hrishav"}else{s="Usage: uname -a"}break;case"python":if(o[1]==="--version"){s="Python 3.8.5"}else{s="Usage: python --version"}break;case"adduser":if(o[1]){let t=o[1];let e=prompt(`Set a new password: `);let a=prompt(`Enter the password again: `);if(e===a){d[t]=e;localStorage.setItem("users",JSON.stringify(d));n[`/home/${t}`]=g;g.forEach(e=>{n[`/home/${t}/${e}`]=[]});localStorage.setItem("filesystem",JSON.stringify(n));s=`Added user ${t}.`}else{s=`Passwords do not match. Try again.`}}else{s="Usage: adduser <username>"}break;case"login":if(o[1]){let e=o[1];let t=prompt(`Password: `);if(d[e]&&d[e]===t){p=e;f="~";s=`Logged in as ${e}`}else{s="Login incorrect"}}else{s="Usage: login <username>"}break;case"exit":if(c){c=false;u=false;p="user";f="~"}else{s="No more processes left to exit."}break;case"clear":m.innerHTML="";return"";case"ifconfig":s=`eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
    inet 192.168.1.100  netmask 255.255.255.0  broadcast 192.168.1.255
    inet6 fe80::a00:27ff:fe4e:66a1  prefixlen 64  scopeid 0x20<link>
    ether 08:00:27:4e:66:a1  txqueuelen 1000  (Ethernet)
    RX packets 215265  bytes 327264500 (312.1 MiB)
    RX errors 0  dropped 0  overruns 0  frame 0
    TX packets 155209  bytes 14030524 (13.3 MiB)
    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
    inet 127.0.0.1  netmask 255.0.0.0
    inet6 ::1  prefixlen 128  scopeid 0x10<host>
    loop  txqueuelen 1000  (Local Loopback)
    RX packets 0  bytes 0 (0.0 B)
    RX errors 0  dropped 0  overruns 0  frame 0
    TX packets 0  bytes 0 (0.0 B)
    TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0`;break;case"nano":if(o[1]){let e=o[1];let t=`${i}/${e}`;let a=prompt("Enter file content: ");n[t]=a;if(!n[i].includes(e)){n[i].push(e)}localStorage.setItem("filesystem",JSON.stringify(n));s=`Created file ${e}.`}else{s="Usage: nano <filename>"}break;case"cat":let t=o[1]?o[1]:"";if(n[t]){s=n[t]}else{s=`cat: ${o[1]}: No such file or directory`}break;case"mkdir":if(o[1]){let e=o[1];let t=`${i}/${e}`;n[t]=[];if(!n[i].includes(e)){n[i].push(e)}localStorage.setItem("filesystem",JSON.stringify(n));s=`Created directory ${e}.`}else{s="Usage: mkdir <directory>"}break;case"rmdir":if(o[1]){let t=o[1];let e=`${i}/${t}`;if(n[e]&&n[e].length===0){delete n[e];n[i]=n[i].filter(e=>e!==t);localStorage.setItem("filesystem",JSON.stringify(n));s=`Removed directory ${t}.`}else{s=`rmdir: failed to remove '${t}': Directory not empty or does not exist.`}}else{s="Usage: rmdir <directory>"}break;case"rm":if(o[1]){let t=o[1];let e=`${i}/${t}`;if(n[e]){delete n[e];n[i]=n[i].filter(e=>e!==t);localStorage.setItem("filesystem",JSON.stringify(n));s=`Removed file ${t}.`}else{s=`rm: cannot remove '${t}': No such file`}}else{s="Usage: rm <file>"}break;case"trace":if(o[1]==="-m"){s=await k()}else if(o[1]==="-t"&&o[2]){const l=o[2];s=await k(l)}else{s="Usage: trace -m | trace -t <IP address>"}break;default:s=`Command not found: ${a}`}return s}async function k(e=""){const t=await fetch(`https://ipapi.co/${e}/json/`);const a=await t.json();const{l:s,city:o,region:r,p:n,u:i,org:l,m:c,latitude:d,longitude:p,g:f}=a;const u=(new Date).toLocaleString("en-US",{timeZone:i});return`IP: ${s}
City: ${o}
Region: ${r}
Country: ${n}
Timezone: ${i}
Local Time: ${u}
ISP: ${l}
ASN: ${c}
Latitude: ${d}
Longitude: ${p}`}s.addEventListener("keydown",async function(e){if(e.key==="Enter"){let e=s.value;let t=await r(e);if(t){m.innerHTML+=`<div><span style="color:${a.style.color};">${a.textContent}</span> ${e}</div><div style="color:lime; text-align:left;">${t}</div>`}else{m.innerHTML+=`<div><span style="color:${a.style.color};">${a.textContent}</span> ${e}</div>`}s.value="";o();m.scrollTop=m.scrollHeight}});t();o();